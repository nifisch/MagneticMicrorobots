function [fitresult, gof] = fit_f2D(set,X, Y, f)

%CREATEFIT1(X,Y,F)
%  Create a fit.
%
%  Data for '2Danalyticalfit' fit:
%      X Input : X
%      Y Input : Y
%      Z Output: f
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 04-Aug-2019 15:32:03


%% Fit: '2Danalyticalfit'.
[xData, yData, zData] = prepareSurfaceData( X, Y, f );

% Set up fittype and options.
ft = fittype( set.fit_polynome2D );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Normalize = set.fit_centscale2D;
opts.Robust = 'LAR';

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% % Plot fit with data.
% figure( 'Name', '2Danalyticalfit' );
% h = plot( fitresult, [xData, yData], zData );
% legend( h, '2Danalyticalfit', 'f vs. X, Y', 'Location', 'NorthEast' );
% % Label axes
% xlabel X
% ylabel Y
% zlabel f
% grid on
% view( -112.8, -0.2 );

%CREATEFIT(X,Y,FX)
%  Create a fit.
%
%  Data for 'FitFx' fit:
%      X Input : X
%      Y Input : Y
%      Z Output: Fx
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 29-Jul-2019 09:52:44


% %% Fit: 'FitFx'.
% [xData, yData, zData] = prepareSurfaceData( X, Y, Fx );
% 
% % Set up fittype and options.
% ft = fittype( 'poly33' );
% opts = fitoptions( 'Method', 'LinearLeastSquares' );
% opts.Normalize = 'on';
% opts.Robust = 'LAR';
% 
% % Fit model to data.
% [fitresult, gof] = fit( [xData, yData], zData, ft, opts );

if set.vis2Dfit==1   
    % Plot fit with data.
    figure( 'Name', 'FitFx' );
    h = plot( fitresult, [xData, yData], zData );
    legend( h, 'FitFx', 'Fx vs. X, Y', 'Location', 'NorthEast' );
    % Label axes
    xlabel X
    ylabel Y
    zlabel Fx
    grid on
    view( -78.4, -6.2 );
end